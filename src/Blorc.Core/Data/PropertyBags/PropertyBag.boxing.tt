<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
	var typeCodes = Enum.GetValues(typeof(TypeCode));
#>

//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by a tool. 
// 
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated. 
// </auto-generated> 
//------------------------------------------------------------------------------

namespace Catel.Data
{
    using System;

    public partial class PropertyBag
    {
<# 
foreach (TypeCode typeCode in typeCodes) 
{
	if (typeCode == TypeCode.Empty || typeCode == TypeCode.DBNull || typeCode == TypeCode.Object)
	{
		continue;
	}

    string storageType = "BoxingCache<" + typeCode.ToString() + ">";
	string storageName = typeCode.ToString() + "BoxingCache";

#>
        private static readonly <#= storageType #> <#= storageName #> = new <#= storageType #>();

        /// <summary>
        /// Sets the property value.
        /// </summary>
        /// <param name="propertyName">Name of the property.</param>
        /// <param name="value">The value.</param>
        /// <exception cref="ArgumentException">The <paramref name="propertyName" /> is <c>null</c> or whitespace.</exception>
        public void SetValue(string propertyName, <#= typeCode.ToString() #> value)
        {
            var boxedValue = <#= storageName #>.GetBoxedValue(value);
            SetValue<object>(propertyName, boxedValue);
        }

<#
}
#>
    }
}      